<IfModule mod_ssl.c>
	<VirtualHost *:443>
		ServerAdmin jrussack@calacademy.org
		ServerName localhost
#		ServerName www.antweb.org
#		ServerAlias antweb.org

        DocumentRoot /var/www/html


		WSGIProcessGroup api_python
		WSGIApplicationGroup %{GLOBAL}
 		WSGIDaemonProcess api_python user=www-data group=www-data python-home=/var/www/script/venv python-path=/var/www/script/venv/site-packages:/var/www/script/venv/lib/python3.7/site-packages
        WSGIScriptAlias /v3.1 /var/www/script/v3.1/api.py  process-group=api_python


        JKMount / ajp13_worker

        # file types
        JKMount /*.pdf ajp13_worker
        JKMount /*.xls ajp13_worker
        JKMount /*.xlsx ajp13_worker
        JKMount /*.html ajp13_worker
        JKMount /*.css ajp13_worker
        JKMount /*.ico ajp13_worker
        JKMount /*.jsp ajp13_worker
        JKMount /*.do ajp13_worker
        JKMount /*.jpg ajp13_worker
        JKMount /*.jpeg ajp13_worker
        JKMount /*.gif ajp13_worker
        JKMount /*.png ajp13_worker
        JKMount /*.js ajp13_worker
        JKMount /*.txt ajp13_worker
        JKMount /*.log ajp13_worker
        JKMount /*.js ajp13_worker

        # directories
        JKMount /antblog/* ajp13_worker
        JKMount /web/curator/* ajp13_worker
        JKMount /web/log/* ajp13_worker
        JKMount /specimen/* ajp13_worker
        JKMount /web/bak/taxonSets/* ajp13_worker

        # servlets
        JKMount /queryFile* ajp13_worker


        # Proxy image requests to our s3 image hosting server
        SSLProxyEngine on
        ProxyPass /images https://slevin.calacademy.org:9000/antweb/images
        ProxyPassReverse /images https://slevin.calacademy.org:9000/antweb/images

		# Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
		# error, crit, alert, emerg.
		# It is also possible to configure the loglevel for particular
		# modules, e.g.
		#LogLevel info ssl:warn

		ErrorLog ${APACHE_LOG_DIR}/error.log
		CustomLog ${APACHE_LOG_DIR}/access.log combined

		#   SSL Engine Switch:
		#   Enable/Disable SSL for this virtual host.
		SSLEngine on

		#   A self-signed (snakeoil) certificate can be created by installing
		#   the ssl-cert package. See
		#   /usr/share/doc/apache2/README.Debian.gz for more info.
		#   If both key and certificate are stored in the same file, only the
		#   SSLCertificateFile directive is needed.
		#   SSLCertificateFile	/etc/letsencrypt/csr/0001_csr-certbot.pem
		#   SSLCertificateKeyFile	/etc/letsencrypt/csr/0001_csr-certbot.pem
		SSLCertificateFile	/etc/ssl/www_antweb_org.crt
        SSLCertificateKeyFile  /etc/ssl/private/www_antweb_org.key
        #SSLCertificateKeyFile	/etc/ssl/www_antweb_org.key

        # enable HTTP/2, if available
        Protocols h2 http/1.1


		<FilesMatch "\.(cgi|shtml|phtml|php)$">
				SSLOptions +StdEnvVars
		</FilesMatch>
		<Directory /usr/lib/cgi-bin>
				SSLOptions +StdEnvVars
		</Directory>



		#   Notice: Most problems of broken clients are also related to the HTTP
		#   keep-alive facility, so you usually additionally want to disable
		#   keep-alive for those clients, too. Use variable "nokeepalive" for this.
		#   Similarly, one has to force some clients to use HTTP/1.0 to workaround
		#   their broken HTTP/1.1 implementation. Use variables "downgrade-1.0" and
		#   "force-response-1.0" for this.
		 BrowserMatch "MSIE [2-6]" \
				nokeepalive ssl-unclean-shutdown \
				downgrade-1.0 force-response-1.0

	</VirtualHost>
</IfModule>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet