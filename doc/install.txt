Antweb Install Notes.
  Consider viewing antweb/doc/installOld.txt.
  This documents the new installation of Antweb Oct 25, 2019 on Ubuntu (w/Joe Russack).

Login in:
ssh mark@10.2.22.30

lsb_release -a
No LSB modules are available.
Distributor ID:	Ubuntu
Description:	Ubuntu 18.04.3 LTS
Release:	18.04
Codename:	bionic

antweb-prod is 10.2.22.20
antweb-cvs is 10.1.10.98

Installed by user Mark (with sudo priv).

These instructions are to make a fully functional antweb server on Centos.  Installation includes:
  Emacs
  Java
  MySQL
  Tomcat
  Ant. Comes by default.
    Apache Ant(TM) version 1.10.5
  Perl - no longer necessary. Comes by default.
    This is perl 5, version 26, subversion 1 (v5.26.1)
  Php - still necessary? Comes by default.
    PHP 7.2.19-0ubuntu0.18.04.2  
  CVS
  Antweb  

Ubuntu
------
sudo timedatectl set-timezone America/Los_Angeles

php
  Follow the instructions for installation.

Groups and Users
----------------
sudo groupadd antweb

# Not sure these are accomplishing anything useful
sudo usermod -g antweb mark
sudo useradd antweb -g antweb  

sudo mkdir /antweb
sudo chown antweb:antweb /antweb

sudo su antweb
mkdir /antweb/antweb_deploy

sudo passwd antweb
  ****** 

Antweb
------
Should be done with a cvs checkout. For now, from local antweb directory...

# This works but is very slow...
scp -r * antweb@10.2.22.30:/antweb/antweb_deploy

# From Mark's dev machine (laptop) dev/calacademy directory:
tar -pczf antweb8.9.1.tar.gz antweb
scp antweb8.9.1.tar.gz mark@10.2.22.30:/home/mark/
# Then, as antweb in the /antweb directory:
tar -xvf antweb8.9.1.tar.tz
cd /home/mark/antweb
cp -r -n * /antweb/antweb_deploy/
#mv antweb antweb_deploy
#or cp -r antweb /antweb/antweb_deploy/
or:
   sudo cp -r -p antweb /antweb/antweb_deploy
   cd /antweb/antweb_deploy/
   sh etc/configProd.sh
   ant deploy
   
sudo chmod 775 antweb_deploy/

There is a file platform.properties that is not in source control that must be installed here:
  /antweb/antweb_deploy/WEB-INF/CLASSES/
This file contains the database password, to google maps key, and other private info.  

Ant
---
sudo apt  install ant  

Emacs
-----
sudo apt-get install emacs

Java
----
java -version
openjdk version "11.0.4" 2019-07-16
OpenJDK Runtime Environment (build 11.0.4+11-post-Ubuntu-1ubuntu218.04.3)
OpenJDK 64-Bit Server VM (build 11.0.4+11-post-Ubuntu-1ubuntu218.04.3, mixed mode, sharing)

OpenJDK is good enough? TBD.

MySQL
-----
sudo apt update

sudo apt install mysql-server 

sudo mysql_secure_installation
  Validate Password Plugin: N
  Medium strength pwd: ****** strength 25
  Remove anonymous login: Y
  Disallow remote root loging: Y 
  Remove test database:Y
  Remove privileges tables: Y

sudo mysql
  ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '******';
    #NO longer: Note new pwd with capital F and !.
  FLUSH PRIVILEGES;
  CREATE USER 'antweb'@'localhost' IDENTIFIED BY '******';
  
To start: sudo systemctl start mysql.
For status: systemctl status mysql.service    
For version: sudo mysqladmin -p -u root version
  Server version 5.7.27-0ubuntu0.18.04.1

GRANT ALL PRIVILEGES ON *.* TO 'antweb'@'localhost' IDENTIFIED BY '******' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO 'antweb'@'%' IDENTIFIED BY '******' WITH GRANT OPTION;

Log in to mysql as antweb

create database ant;
  scp mjohnson@10.2.22.20:/home/antweb/links/currentDump.sql.gz ./20191025.sql.gz
  gunzip < 20191025.sql.gz | mysql -u antweb -p ant

See:
/etc/mysql/mysql.cnf (or etc/mysql/my.cnf same thing)...
  for changes that effect recent images upload and performance.
and 
  group_concat_max_len=15360
etc...


CVS
---
sudo apt install cvs


Apache
------
sudo apt install apache2

  replace /var/www/html/index.html
  Ubuntu document root is /var/www/html
  started/stopped with /etc/init.d/apache2 or apache2ctl
  Conf
    /etc/apache2/
    |-- apache2.conf
    |       `--  ports.conf
    |-- mods-enabled
    |       |-- *.load
    |       `-- *.conf
    |-- conf-enabled
    |       `-- *.conf
    |-- sites-enabled
    |       `-- *.conf    
        
Tomcat
------
Tomcat installation - with connector information below.
Follow guide here: https://www.digitalocean.com/community/tutorials/install-tomcat-9-ubuntu-1804

In /opt/tomcat/latest/conf:
/usr/lib/jvm/java-11-openjdk-amd64/bin/keytool -genkey -alias tomcat -keyalg RSA -keystore keystore


Tomcat failing on launch. Replaced keystone entry:
    <Resource name="UserDatabase" auth="Container"
              type="org.apache.catalina.UserDatabase"
              description="User database that can be updated and saved"
              factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
              pathname="conf/tomcat-users.xml" />
  </GlobalNamingResources>

From /opt/tomcat/latest”
Chown -r tomcat:tomcat webapps/ work/ temp/ logs/ conf

usermod -a -G antweb tomcat]

Installing apache mod_jk:
https://www.digitalocean.com/community/tutorials/how-to-encrypt-tomcat-8-connections-with-apache-or-nginx-on-ubuntu-16-04
Make cert:
https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-apache-in-ubuntu-16-04

When complete, this is the only valid site:
/etc/apache2/sites-enabled/default-ssl.conf

Set listings to true in /usr/local/tomcat/conf/web.xml

add to top of /usr/local/tomcat/bin/catalina.sh:
CATALINA_OPTS="$CATALINA_OPTS -Djava.util.Arrays.useLegacyMergeSort=true -Dfile.encoding=UTF8 -Djava.util.logging.config.file=/usr/local/tomcat/conf/logging.properties -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager"

old servers also had these:
-Dorg.apache.jasper.compiler.Parser.STRICT_QUOTE_ESCAPING=false


Python/API setup (Joe's notes)
----------------
sudo apt install default-jdk

apt-get install python3-pip
hash -d pip3
apt-get install libssl-dev
pip3 install phpmysql
Pip3 install Flask-SQLAlchemy
pip3 install Flask-Restful
pip3 install mysqlclient

Sudo Apt-get install apache2-dev
Sudo Pip3 install mod-wsgi 

ln -s /antweb/antweb/api/v3.1 v3.1


USWGI API * NOT being used. We went the Apache route. This can be deleted.
---------
Follow documentation under doc/apiV3.txt

--uWSGI python for tomcat

apt-get install build-essential python-dev

cd /home/mark/  # wrong?
sudo -H pip install --upgrade pip
sudo -H  pip install uwsgi

launch uwsgi:
cd /antweb/antweb_deploy/api/v3.1
uwsgi --http :9091 --wsgi-file /antweb/antweb_deploy/api/v3.1/api.py

works: http://10.2.22.30:9091/specimens?specimenCode=casent0922626&up=1

This solution doesn't allow for the version number as Apache would...
Used to be like:
    https://api.antweb.org/v3.1/specimens?specimenCode=casent0922626


Apache API
----------
Main config file here: 
  /etc/apache2/apache2.conf

Copy extensive changes into/from:
    /etc/apache2/sites-enabled/default-ssl.conf

In order to enable Data Download,in:
    ./conf-available/security.conf:Header
    ./conf-available/ssl-params.conf
set...
    set X-Frame-Options: "sameorigin"

sudo systemctl restart apache2
sudo systemctl stop apache2

log files: /var/log/apache2/error.log  


Antweb
------
sudo chmod  755 /usr/local/tomcat/lib -R
sudo chmod 775 /antweb/antweb_deploy -R

sudo sudo chmod 777 /usr/local/tomcat/webapps/   # needed for "ant build". Must be a better way.

# This is a custom step.
# configX.sh, appResX.properties, and buildX.properties required for each platform instance.
cd /antweb/antweb_deploy
sh etc/configProd.sh

sudo mkdir /data
sudo chmod 775 /data
sudo chown antweb:antweb /data

# These are necessary if running from tomcat container (as tomcat:tomcat).
sudo chmod 777 /data/antweb/web
# When did we create /data/antweb? Maybe in the "ant deploy" below?

mkdir /data/antweb/web/log
sudo chmod 777 /data/antweb/web/log

-- For image upload
* Is images mapped? This may be unnecessary. Needs to be a temp directory and ability
  to create new directories in images/
cd /data/antweb/images
sudo chmod 777 .
mkdir temp
chmod 777 temp


mkdir /data/antweb/web/genInc
sudo chmod 777 /data/antweb/web/genInc
echo "" > /data/antweb/web/genInc/statistics.jsp

cd /antweb/antweb_deploy
ant deploy

# make the convenience links:
cd /antweb
sudo mkdir links
sudo chown antweb:antweb links
cd links
sudo sh ../antweb_deploy/etc/makeLinks.sh
sudo chmod 775 tomcat/logs -R

ln -s /data/antweb/backup /mnt/backup

sudo systemctl restart tomcat
http://10.2.22.30:8080/manager/html

Add:
org.apache.catalina.core.ContainerBase.[Catalina].level=INFO
org.apache.catalina.core.ContainerBase.[Catalina].handlers=java.util.logging.ConsoleHandler
Into: 
emacs /antweb/antweb_deploy/WEB-INF/classes/logging.properties

           
Antblog
-------

Antblog
Cronjobs
Mount drives
  v-antweb-web-prod:/vol/antweb_web_prod
                       67G   61G  5.7G  92% /data/antweb/web
  everest:/vol/antweb   1.7T  1.4T  245G  86% /data/antweb/images
  10.2.22.34:/vol/linux_backup/antweb_q
                      250G   34G  217G  14% /mnt/backup

Changed all http to https with:
   find . -name "*.html" -exec perl -p -i -e "s/http/https/g"  {} \;


GIT
---
  Create Repository (just done once, already done. JRussack's notes).

    To create, I created a blank repo named “antweb”. I then used git clone to place it on my local machine.
    I then did git clone, per the big green button “Clone or download”:
    git clone git@github.com:calacademy-research/antweb.git
    This created the antweb directory on my local machine. I then copied the files that you indicated from .30 to this directory, did a make clean, removed the CVS artifacts with 
    find . -name "CVS" -type d -exec rm -rf {} \;
    And verified they were gone with
    find . -name "CVS" -type d -print
    I did a quick scan for anything else we might not want in the repo. Looked good.
    git add *
    git commit -m "Initial move from CVS - 2-11-20”
    git push


On dev machine (Mac laptop).

  git clone git@github.com:calacademy-research/antweb.git
  git status
  git commit -a -m "This is mark's initial trial"
  git push

  sh etc/configMark.sh
  ant deploy

SSH Keys
--------
cd $HOME/.ssh
ssh-keygen -t rsa
cat id_rsa.pub
  # Copy the output and paste into Github.
  

Install After Joe
-----------------
Change conf/server.xml to have in the <host> block:
<Context path="" docBase="/data/antweb"/>  <!-- was debug="0" -->


# To aid in Deployment, on a server system...
sudo  ln -s /data/antweb /usr/local/antweb
#On a local dev machine...
sudo  ln -s /data/antweb /usr/local/tomcat/webapps/antweb/

edit /usr/local/tomcat/conf/context.xml to disable session persistence.
  Add into the context section:
  <Resources cachingAllowed="true" cacheMaxSize="100000" />

Edit etc/AppResProd.properties to have:
#site.domain=www.antweb.org
site.domain=10.2.22.30

Edit build.properties to have:
#antweb.home=/usr/local/tomcat/webapps/antweb
antweb.home=/data/antweb

ant build

Generate the Recent Images, Edits and Statistics 
  (links in the Technical Functions section of curate page).


cd /var/www/html/
sudo bash
sudo mkdir antblog
sudo chmod 775 antblog
From the live machine in /var/www/html/:
  scp -r antblog/* mark@10.2.22.30:/var/www/html/antblog


Joe antweb notes
----------------
We use tomcat and apache.
Tomcat connects to apache via mod_jk, and the command JKMmount, appended at the end of these notes
We also call python.
Python is invoked from WSGI using the WSGI magic at the end of this file. 
We use a virtualenv for python. WE have to set the virtualenv explicitly, see end of file

test1:
https://certbot.eff.org/lets-encrypt/ubuntubionic-apache
https://10.2.22.30/web/log/worldants/20200107-05:00:02-fetchAndReloadWorldants.html

Tomcat installation - with connector information below.
Follow guide here: https://www.digitalocean.com/community/tutorials/install-tomcat-9-ubuntu-1804

See: /etc/systemd/system/tomcat.service  For startup settings. Should look like this:

[Unit]
Description=Apache Tomcat Web Application Container
After=network.target

[Service]
Type=forking

Environment=JAVA_HOME=/usr/lib/jvm/java-1.11.0-openjdk-amd64
Environment=CATALINA_PID=/opt/tomcat/latest/temp/tomcat.pid
Environment=CATALINA_HOME=/opt/tomcat/latest
Environment=CATALINA_BASE=/opt/tomcat/latest
Environment='CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC'
Environment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom'

ExecStart=/opt/tomcat/latest/bin/startup.sh
ExecStop=/opt/tomcat/latest/bin/shutdown.sh

User=tomcat
Group=tomcat
UMask=0007
RestartSec=10
Restart=always

[Install]
WantedBy=multi-user.target

--- end

sudo apt install default-jdk

In /opt/tomcat/latest/conf:
/usr/lib/jvm/java-11-openjdk-amd64/bin/keytool -genkey -alias tomcat -keyalg RSA -keystore keystore


Tomcat failing on launch. Replaced keystone entry:
    <Resource name="UserDatabase" auth="Container"
              type="org.apache.catalina.UserDatabase"
              description="User database that can be updated and saved"
              factory="org.apache.catalina.users.MemoryUserDatabaseFactory"
              pathname="conf/tomcat-users.xml" />
  </GlobalNamingResources>

From /opt/tomcat/latest”
Chown -r tomcat:tomcat webapps/ work/ temp/ logs/ conf


Installing apache mod_jk:
https://www.digitalocean.com/community/tutorials/how-to-encrypt-tomcat-8-connections-with-apache-or-nginx-on-ubuntu-16-04
Make cert:
https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-apache-in-ubuntu-16-04

When complete, this is the only valid site:
/etc/apache2/sites-enabled/default-ssl.conf

Python/API setup:
[all apt modules installed with sudo]

apt-get install python3-pip
hash -d pip3
apt-get install libssl-dev
pip3 install phpmysql
Pip3 install Flask-SQLAlchemy
pip3 install Flask-Restful
pip3 install mysqlclient

—————— new notes
Sudo Apt-get install apache2-dev
Sudo Pip3 install mod-wsgi 

—————10.2.22.30
/var/www/html/v3.1/apy.py is our target

sudo apt-get install libapache2-mod-wsgi


—————
  GNU nano 2.9.3            /etc/apache2/sites-available/default-ssl.conf                     Modified

<IfModule mod_ssl.c>
        <VirtualHost *:443>
                ServerAdmin jrussack@calacademy.org
                ServerName www.antweb.org
                ServerAlias antweb.org
                WSGIProcessGroup api_python
                WSGIApplicationGroup %{GLOBAL}
                WSGIDaemonProcess api_python user=www-data group=www-data python-home=/var/www/script/venv python-path=/var/www/script/venv/site-packages:/var/www/script/venv/lib/python3.6/site-pack$
                WSGIScriptAlias /api/v3.1 /var/www/script/v3.1/api.py process-group=api_python


                JKMount / ajp13_worker
                JKMount /*.html ajp13_worker
                JKMount /*.css ajp13_worker
                JKMount /*.jsp ajp13_worker
                JKMount /*.do ajp13_worker
                JKMount /*.jpg ajp13_worker
                JKMount /*.jpeg ajp13_worker
                JKMount /*.gif ajp13_worker
                JKMount /*.png ajp13_worker
                JKMount /antblog/* ajp13_worker


                DocumentRoot /var/www/html


Mark PY Notes
python3 -m pip install --user virtualenv
/usr/bin/python3 -m pip install --upgrade pip

mark@antweb:/var/www/script$ source venv/bin/activate
(venv) mark@antweb:/var/www/script$ pip freeze > $HOME/requirements.txt

// Take the requirements.txt to a new machine to set up a new environment there.
* removed pkg-resources==0.0.0 from requirements.txt
virtualenv --python=python3 venv
source venv/bin/activate
pip install -r requirements.txt
pip install mysqlclient



Convert for War File Deployment
-------------------------------
# NOPE! We backed off the idea of using war file deployment because Tomcat does not
# have an alternate document root.

Remove whatever is in /usr/local/tomcat/webapps/ROOT
sudo apt install unzip 
unzip antweb.war into ROOT
Comment out this line near the bottom of server.xml...
  	<!-- Context path="" docBase="/data/antweb"/ -->


To Do
-----
Hostnames. This machine is? Access antweb-prod, antweb-stg, antweb-dev, antweb-cvs.

Search on tapirlink in antweb/doc/installOld.txt

Copy these jars into tomcat/lib dir:
  jaxp_parser_impl.jar jsp-api.jar serializer.jar xalan.jar xercesImpl.jar xml-apis.jar xml-commons-apis.jar xsltc.jar
  

https and ssl

Create /data/antweb/
image directory mounted.



Move the jar files to enable the ant build...
scp mjohnson@10.2.22.20:/usr/local/tomcat/lib/jaxp_parser_impl.jar . 
serializer.jar 
xalan.jar 
scp mjohnson@10.2.22.20:/usr/local/tomcat/lib/xercesImpl.jar /antweb/antweb_deploy/WEB-INF/lib
xml-apis.jar 
xml-commons-apis.jar 
xsltc.jar 
mark@10.2.22.28:/antweb/links/tomcat/lib/ 







    

 
