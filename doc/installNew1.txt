InstallNew1
-----------
* Current install.txt is master. This one has sections (Tomcat and SSL) that were excluded
in lieu of Joe Russack's notes for those components.


Antweb Install Notes.
  Consider viewing antweb/doc/installOld.txt.
  This documents the new installation of Antweb Oct 25, 2019 on Ubuntu (w/Joe Russack).

Login in:
ssh mark@10.2.22.30

lsb_release -a
No LSB modules are available.
Distributor ID:	Ubuntu
Description:	Ubuntu 18.04.3 LTS
Release:	18.04
Codename:	bionic

antweb-prod is 10.2.22.20
antweb-cvs is 10.1.10.98

Installed by user Mark (with sudo priv).

These instructions are to make a fully functional antweb server on Centos.  Installation includes:
  Emacs
  Java
  MySQL
  Tomcat
  Ant. Comes by default.
    Apache Ant(TM) version 1.10.5
  Perl - no longer necessary. Comes by default.
    This is perl 5, version 26, subversion 1 (v5.26.1)
  Php - still necessary? Comes by default.
    PHP 7.2.19-0ubuntu0.18.04.2  
  CVS
  Antweb  

Groups and Users
----------------
sudo groupadd antweb

# Not sure these are accomplishing anything useful
sudo usermod -g antweb mark
sudo useradd antweb -g antweb  

sudo mkdir /antweb
sudo chown antweb:antweb /antweb

sudo su antweb
mkdir /antweb/antweb_deploy

sudo passwd antweb
  f0rm1c6

Antweb
------
Should be done with a cvs checkout. For now, from local antweb directory...

# This works but is very slow...
scp -r * antweb@10.2.22.30:/antweb/antweb_deploy

# From Mark's dev machine (laptop) dev/calacademy directory:
tar -pczf antweb8.9.1.tar.gz antweb
scp antweb8.9.1.tar.gz mark@10.2.22.30:/home/mark/
# Then, as antweb in the /antweb directory:
tar -xvf antweb8.9.1.tar.tz
cd /home/mark/antweb
cp -r -n * /antweb/antweb_deploy/
#mv antweb antweb_deploy
#or cp -r antweb /antweb/antweb_deploy/
or:
   sudo cp -r -p antweb /antweb/antweb_deploy
   cd /antweb/antweb_deploy/
   sh etc/configProd.sh
   ant deploy
   
sudo chmod 775 antweb_deploy/

Ant
---
sudo apt  install ant  

Emacs
-----
sudo apt-get install emacs

Java
----
java -version
openjdk version "11.0.4" 2019-07-16
OpenJDK Runtime Environment (build 11.0.4+11-post-Ubuntu-1ubuntu218.04.3)
OpenJDK 64-Bit Server VM (build 11.0.4+11-post-Ubuntu-1ubuntu218.04.3, mixed mode, sharing)

OpenJDK is good enough? TBD.

MySQL
-----
sudo apt update

sudo apt install mysql-server 

sudo mysql_secure_installation
  Validate Password Plugin: N
  Medium strength pwd: f0rm1c6 strength 25
  Remove anonymous login: Y
  Disallow remote root loging: Y 
  Remove test database:Y
  Remove privileges tables: Y

sudo mysql
  ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'f0rm1c6';
    #NO longer: Note new pwd with capital F and !.
  FLUSH PRIVILEGES;
  CREATE USER 'antweb'@'localhost' IDENTIFIED BY 'f0rm1c6';
  
To start: sudo systemctl start mysql.
For status: systemctl status mysql.service    
For version: sudo mysqladmin -p -u root version
  Server version 5.7.27-0ubuntu0.18.04.1

GRANT ALL PRIVILEGES ON *.* TO 'antweb'@'localhost' IDENTIFIED BY 'f0rm1c6' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO 'antweb'@'%' IDENTIFIED BY 'f0rm1c6' WITH GRANT OPTION;

Log in to mysql as antweb

create database ant;
  scp mjohnson@10.2.22.20:/home/antweb/links/currentDump.sql.gz ./20191025.sql.gz
  gunzip < 20191025.sql.gz | mysql -u antweb -p ant


CVS
---
sudo apt install cvs


Apache
------
sudo apt install apache2

  replace /var/www/html/index.html
  Ubuntu document root is /var/www/html
  started/stopped with /etc/init.d/apache2 or apache2ctl
  Conf
    /etc/apache2/
    |-- apache2.conf
    |       `--  ports.conf
    |-- mods-enabled
    |       |-- *.load
    |       `-- *.conf
    |-- conf-enabled
    |       `-- *.conf
    |-- sites-enabled
    |       `-- *.conf    
        
Tomcat
------
  Following this doc: https://linuxize.com/post/how-to-install-tomcat-9-on-ubuntu-18-04/

sudo useradd -r -m -U -d /opt/tomcat -s /bin/false tomcat

wget http://www-eu.apache.org/dist/tomcat/tomcat-9/v9.0.30/bin/apache-tomcat-9.0.30.tar.gz -P /tmp
  # Or whatever the latest is...
  
sudo tar xf /tmp/apache-tomcat-9*.tar.gz -C /opt/tomcat

sudo ln -s /opt/tomcat/apache-tomcat-9.0.30 /opt/tomcat/latest
  # Whatever the latest is...

sudo chown -RH tomcat: /opt/tomcat/latest

sudo sh -c 'chmod +x /opt/tomcat/latest/bin/*.sh'

sudo emacs /etc/systemd/system/tomcat.service

# -------- Paste the following ------------
[Unit]
Description=Tomcat 9 servlet container
After=network.target

[Service]
Type=forking

User=tomcat
Group=tomcat

Environment="JAVA_HOME=/usr/lib/jvm/default-java"
Environment="JAVA_OPTS=-Djava.security.egd=file:///dev/urandom -Djava.awt.headless=true"

Environment="CATALINA_BASE=/opt/tomcat/latest"
Environment="CATALINA_HOME=/opt/tomcat/latest"
Environment="CATALINA_PID=/opt/tomcat/latest/temp/tomcat.pid"
Environment="CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC"

ExecStart=/opt/tomcat/latest/bin/startup.sh
ExecStop=/opt/tomcat/latest/bin/shutdown.sh

[Install]
WantedBy=multi-user.target
# -------- End Paste the following ------------

sudo emacs /opt/tomcat/latest/conf/context.xml
    <!-- Uncomment this to disable session persistence across Tomcat restarts -->                                                                                                                                                                                                                                                                                                                                                                                                 
    <Manager pathname="" />

sudo emacs /opt/tomcat/latest/conf/server.xml
# Supposed to do this for apache integration? Unsure. For now, remains undone.
#  Change 8080 -> 80 in connector

sudo systemctl daemon-reload
# sudo systemctl stop tomcat
# sudo systemctl status tomcat
# sudo systemctl restart tomcat
sudo systemctl start tomcat

sudo systemctl enable tomcat
  Created symlink /etc/systemd/system/multi-user.target.wants/tomcat.service â†’ /etc/systemd/system/tomcat.service.

Can be accessed here, at this point: http://10.2.22.28:8080/

Added to /opt/tomcat/latest/conf/tomcat-users.xml inside the tomcat-users xml block.
   <role rolename="admin-gui"/>
   <role rolename="manager-gui"/>
   <user username="admin" password="formica" roles="admin-gui,manager-gui"/>

sudo emacs /opt/tomcat/latest/webapps/manager/META-INF/context.xml
  Comment out the valve block
sudo emacs /opt/tomcat/latest/webapps/host-manager/META-INF/context.xml
  Comment out the valve block



Add to conf/server.xml in the hosts block.
  <Context path="" docBase="/data/antweb"/>  <!-- was debug="0" -->



To put the changes into effect: sudo systemctl restart tomcat
x`x``
Now, admin:formica access the Tomcat Web Application Manager

To make compatible with old tomcat install location (currently required by build.xml):
  cd /usr/local
  ln -sf /opt/tomcat/latest tomcat

*** Completed up to here (with a couple of commands of doc/apiV3.txt executed).

API
---
Follow documentation under doc/apiV3.txt

Antweb
------
sudo chmod  755 /usr/local/tomcat/lib -R
sudo chmod 775 /antweb/antweb_deploy -R

sudo sudo chmod 777 /usr/local/tomcat/webapps/   # needed for "ant build". Must be a better way.

# This is a custom step.
# configX.sh, appResX.properties, and buildX.properties required for each platform instance.
cd /antweb/antweb_deploy
sh etc/configProd.sh

sudo mkdir /data
sudo chmod 775 /data
sudo chown antweb:antweb /data

# These are necessary if running from tomcat container (as tomcat:tomcat).
sudo chmod 777 /data/antweb/web
# When did we create /data/antweb? Maybe in the "ant deploy" below?

mkdir /data/antweb/web/log
sudo chmod 777 /data/antweb/web/log

mkdir /data/antweb/web/genInc
sudo chmod 777 /data/antweb/web/genInc
echo "" > /data/antweb/web/genInc/statistics.jsp

cd /antweb/antweb_deploy
ant deploy

# make the convenience links:
cd /antweb
sudo mkdir links
sudo chown antweb:antweb links
cd links
sudo sh ../antweb_deploy/etc/makeLinks.sh
sudo chmod 775 tomcat/logs -R

sudo systemctl restart tomcat
http://10.2.22.30:8080/manager/html

Add:
org.apache.catalina.core.ContainerBase.[Catalina].level=INFO
org.apache.catalina.core.ContainerBase.[Catalina].handlers=java.util.logging.ConsoleHandler
Into: 
emacs /antweb/antweb_deploy/WEB-INF/classes/logging.properties

           
Apache
------           
sudo systemctl stop apache2           
           

https and ssl
-------------
Currently done in Tomcat/bin (on my dev machine)
cd /usr/local/tomcat/bin

sudo keytool -genkey -alias tomcat -keyalg RSA -keystore ./keystore
  // Creates a keystore file in the tomcat/bin directory
  // password changeit
Add /Users/mark/dev/tomcat/bin/keystore with password to edit ../conf/server.xml
is:
    <Connector port="8443" protocol="org.apache.coyote.http11.Http11AprProtocol"
        maxThreads="150" SSLEnabled="true"
        keystoreFile="/usr/local/tomcat/bin/keystore" keystorePass="formica"
    >
        <UpgradeProtocol className="org.apache.coyote.http2.Http2Protocol" />
        <SSLHostConfig>
            <Certificate certificateKeyFile="conf/localhost-rsa-key.pem"
                         certificateFile="conf/localhost-rsa-cert.pem"
                         certificateChainFile="conf/localhost-rsa-chain.pem"
                         type="RSA" />
        </SSLHostConfig>
    </Connector>


was:
 <Connector port="8443" protocol="HTTP/1.1" SSLEnabled="true"
               maxThreads="150" scheme="https" secure="true"
               clientAuth="false" sslProtocol="TLS" 
   	          keystoreFile="c:\mkyongkeystore"
	          keystorePass="password" 
 />	       
https://localhost:8443/antweb/

Stage and production are configured to not specify a secure port.  




To Do
-----
Hostnames. This machine is? Access antweb-prod, antweb-stg, antweb-dev, antweb-cvs.

Search on tapirlink in antweb/doc/installOld.txt

Copy these jars into tomcat/lib dir:
  jaxp_parser_impl.jar jsp-api.jar serializer.jar xalan.jar xercesImpl.jar xml-apis.jar xml-commons-apis.jar xsltc.jar
  
edit /usr/local/tomcat/conf/context.xml to disable session persistence.

https and ssl

Create /data/antweb/
image directory mounted.

my.cnf configurations.


Move the jar files to enable the ant build...
scp mjohnson@10.2.22.20:/usr/local/tomcat/lib/jaxp_parser_impl.jar . 
serializer.jar 
xalan.jar 
scp mjohnson@10.2.22.20:/usr/local/tomcat/lib/xercesImpl.jar /antweb/antweb_deploy/WEB-INF/lib
xml-apis.jar 
xml-commons-apis.jar 
xsltc.jar 
mark@10.2.22.28:/antweb/links/tomcat/lib/ 







    

 
