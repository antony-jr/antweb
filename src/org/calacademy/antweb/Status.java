package org.calacademy.antweb;

import java.util.*;
import java.io.Serializable;
import java.sql.*;

import javax.servlet.http.HttpServletRequest;
import javax.sql.DataSource;

import org.apache.commons.logging.Log; 
import org.apache.commons.logging.LogFactory; 

import org.calacademy.antweb.util.*;

public class Status {

    private static Log s_log = LogFactory.getLog(Status.class);
    
    // status values:

    // From Antcat / Worldants
    public final static String VALID = "valid";
    public final static String COLLECTIVE_GROUP_NAME = "collective group name";
    public final static String EXCLUDED_FROM_FORMICIDAE = "excluded from formicidae";
    public final static String HOMONYM = "homonym";
    public final static String ORIGINAL_COMBINATION = "original combination";
    public final static String SYNONYM = "synonym";
    public final static String UNAVAILABLE = "unavailable";
    public final static String UNIDENTIFIABLE = "unidentifiable";
    // Unidentifiable is for all purposes valid.  But, it does not have a type.  Perhaps it
    // was destroyed.

    public final static String OBSOLETE_COMBINATION = "obsolete combination";

    public final static String OBSOLETE_CLASSIFICATION = "obsolete classification";

    //added Jun 12, 2015.
    public final static String UNAVAILABLE_UNCATEGORIZED = "unavailable uncategorized";
    public final static String UNAVAILABLE_MISSPELLING = "unavailable misspelling";

    // Antweb specific
    public final static String UNRECOGNIZED = "unrecognized";
      // These may be included in a species list, and not found in worldants.  ALSO these can be
      // "placeholders" generated by Antweb to maintain the hierarchical integrity.  These could
      // be "misspellings".  This is an Antweb specific status.
    //public final static String NOT_CURRENT_VALID = "not current valid";
      // These are names that are identified in worldants as not being currently valid.  With 
      // these there should be a "current valid name" to direct the curator to use.
    public final static String MORPHOTAXON = "morphotaxon";    
      // Morphotaxons sholud have a number or a special character to indicate that it is not
      // a valid name.  These are used for specimens of unknown species.  Antweb specific
    public final static String INDETERMINED = "indetermined";
      // If the name is in parenthesis, then it is indeterminate.  This does not mean that it
      // has not yet been determined, but that it can't be determined.  If the name has
      // parenthesis in it.  Antweb specific.


    public final static String[] allStatusArray = {    
        VALID, COLLECTIVE_GROUP_NAME, EXCLUDED_FROM_FORMICIDAE, HOMONYM, ORIGINAL_COMBINATION
      , SYNONYM, UNAVAILABLE, UNIDENTIFIABLE
      , UNRECOGNIZED, MORPHOTAXON, INDETERMINED   // NOT_CURRENT_VALID, 
      , ORIGINAL_COMBINATION
      , UNAVAILABLE_UNCATEGORIZED, UNAVAILABLE_MISSPELLING
    };

    public static ArrayList<String> getAllStatuses() {
      ArrayList<String> statusArrayList = new ArrayList<>(Arrays.asList(allStatusArray));
      return statusArrayList;
    }    

    public final static String[] minimalStatusArray = {    
        VALID, HOMONYM, SYNONYM, UNAVAILABLE, UNIDENTIFIABLE
      , UNRECOGNIZED, MORPHOTAXON, INDETERMINED    // NOT_CURRENT_VALID, 
    };
	
    public static ArrayList<String> getMinimalStatuses() {
      ArrayList<String> statusArrayList = new ArrayList<>(Arrays.asList(minimalStatusArray));
      return statusArrayList;
    }    
    	
    protected String value = null;
    private String currentValidName = "";
    
    public Status () {
    }    
    public Status(String value) {
      this.value = value;
    }
    public Status(String value, String currentValidName) {
      this.value = value;
      this.currentValidName = currentValidName;
    }
        
    public void setValue(String value) {
      this.value = value;
    }
    public String getValue() {
      return this.value;
    }

    // If the value is NOT_CURRENT_VALID then we may here have the current valid name.    
    public void setCurrentValidName(String currentValidName) {
      this.currentValidName = currentValidName;
    }
    public String getCurrentValidName() {
      return this.currentValidName;
    }
    
    
    // See: myrmicinaetetramorium sericeiventre colluta  status:unavailable.  Should be fixed.
    public static boolean usesCurrentValidName(String status) {
        if (Status.ORIGINAL_COMBINATION.equals(status)
         || Status.OBSOLETE_COMBINATION.equals(status)
         || Status.OBSOLETE_CLASSIFICATION.equals(status)
         || Status.UNAVAILABLE_UNCATEGORIZED.equals(status)
         || Status.UNAVAILABLE_MISSPELLING.equals(status)
         || Status.SYNONYM.equals(status)
        // || Status.UNAVAILABLE.equals(status)
        // || Status.UNIDENTIFIABLE.equals(status)
        // || Status.COLLECTIVE_GROUP_NAME.equals(status)
        // || Status.EXCLUDED_FROM_FORMICIDAE.equals(status)
        ) return true;
        return false;       
    }    

    public static boolean excludeFromImport(String status) {
		if ( Status.UNAVAILABLE_UNCATEGORIZED.equals(status)
		 // || Status.UNAVAILABLE_MISSPELLING.equals(status) 
		 // || Status.ORIGINAL_COMBINATION.equals(status) 
			) {
            return true;
        }
        return false;
    }

    public boolean isPassWorldAntsSpeciesCheck() {
      /** UNRECOGNIZED OR NOT_CURRENT_VALID (which has a suggested currentValidName) do NOT pass.
          The question is really "should we report this taxon to the curator as requiring attention".
        */
      boolean passed = false;
      if (getValue() == null) {
         s_log.error("isPassWorldAntsSpeciesCheck value is false.");
         return false;
      }

      if ( (getValue().equals(Status.VALID))
        || (getValue().equals(Status.MORPHOTAXON))
        || (getValue().equals(Status.UNIDENTIFIABLE))
        || (getValue().equals(Status.INDETERMINED))
         ) {
        passed = true;
      } 

      return passed;
    }

    public static boolean isWorldantsStatus(String status) {
        if (status == null) return false;
        if (status.equals(Status.VALID)) return true;
        if (status.equals(Status.ORIGINAL_COMBINATION)) return true;
        if (status.equals(Status.SYNONYM)) return true;
        if (status.equals(Status.UNAVAILABLE)) return true;
        if (status.equals(Status.UNAVAILABLE_MISSPELLING)) return true;
        if (status.equals(Status.UNIDENTIFIABLE)) return true;
        if (status.equals(Status.EXCLUDED_FROM_FORMICIDAE)) return true;
        return false;
    }

    public static boolean isAllAntwebStatus(String status) {
        if (status == null) return false;
        if (status.equals(Status.INDETERMINED)) return true;
        if (status.equals(Status.UNIDENTIFIABLE)) return true;
        if (status.equals(Status.MORPHOTAXON)) return true;
        return false;
    }

    public String getCriteria() {      
      return getCriteria("taxon");
    }

    public String getCriteria(String table) {      
      if (!("taxon".equals(table) 
        || "specimen".equals(table)
        || "sp".equals(table)
        )) return null;
        
      if (Status.VALID.equals(getValue())) return " " + table + ".status = '" + VALID + "' ";
      if (Status.COLLECTIVE_GROUP_NAME.equals(getValue())) return " " + table + ".status = '" + COLLECTIVE_GROUP_NAME + "' ";
      if (Status.EXCLUDED_FROM_FORMICIDAE.equals(getValue())) return " " + table + ".status = '" + EXCLUDED_FROM_FORMICIDAE + "' ";
      if (Status.HOMONYM.equals(getValue())) return " " + table + ".status = '" + HOMONYM + "' ";
      if (Status.ORIGINAL_COMBINATION.equals(getValue())) return " " + table + ".status = '" + ORIGINAL_COMBINATION + "' ";
      if (Status.SYNONYM.equals(getValue())) return " " + table + ".status = '" + SYNONYM + "' ";
      if (Status.UNAVAILABLE.equals(getValue())) return " " + table + ".status = '" + UNAVAILABLE + "' ";
      if (Status.UNIDENTIFIABLE.equals(getValue())) return " " + table + ".status = '" + UNIDENTIFIABLE + "' ";

      if (Status.UNRECOGNIZED.equals(getValue())) return " " + table + ".status = '" + UNRECOGNIZED + "' ";
      // if (Status.NOT_CURRENT_VALID.equals(getValue())) return " " + table + ".status = '" + NOT_CURRENT_VALID + "' ";
      if (Status.MORPHOTAXON.equals(getValue())) return " " + table + ".status = '" + MORPHOTAXON + "' ";
      if (Status.INDETERMINED.equals(getValue())) return " " + table + ".status = '" + INDETERMINED + "' ";

      if (Status.OBSOLETE_COMBINATION.equals(getValue())) return " " + table + ".status = '" + OBSOLETE_COMBINATION + "' ";
      if (Status.OBSOLETE_CLASSIFICATION.equals(getValue())) return " " + table + ".status = '" + OBSOLETE_CLASSIFICATION + "' ";

      // We do not include criteria for unavailable mispelling or uncategorized because we do not want them in search results.

      return null;    
    }
    
}
