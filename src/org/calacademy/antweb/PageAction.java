package org.calacademy.antweb;

import java.io.IOException;
import java.sql.*;
import java.io.*; 
import java.util.*;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.*;

import org.calacademy.antweb.util.*;

import org.apache.commons.logging.Log; 
import org.apache.commons.logging.LogFactory;

/* 
This class is for fetching Project or Region pages (collectively known as species list pages).
Pages are generated by the application and stored in the tomcat/webapps/antweb/web/speciesList/ directory
*/    
public final class PageAction extends Action {

    private static Log s_log = LogFactory.getLog(PageAction.class);
    
    public ActionForward execute(ActionMapping mapping, ActionForm form,
        HttpServletRequest request, HttpServletResponse response)
        throws IOException, ServletException {

        Locale locale = getLocale(request);
        HttpSession session = request.getSession();

        DynaActionForm df = (DynaActionForm) form;
        String name = (String) df.get("name");

        // String url = AntwebProps.getDomainApp() + "/" + Project.getSpeciesListDir() + name + "/" + name + ".jsp";

        String url = AntwebProps.getDomainApp() + "/project.do?name=" + name + "ants";
        //s_log.warn("execute() url:" + url);

        PageTracker.remove(request);
        HttpUtil.fetchAndWrite(url, response);        
        return null;  
    }
    
// This mechanism creates a frame and includes the pregenerated page and stub
//   The drawback here is that subsequent links are framed
/*
        String page = AntwebProps.getDomainApp() + "/" + name + ".jsp";
        s_log.warn("execute() page:" + page);
        String title = "Antweb - " + name;
        String output = "<html><head><title>" + title + "</title><frameset cols = \"100%\">"
          + "<frame src =\"" + page + "\"/></frameset></head><body></body></html>";
        response.setContentType("text/html");
        Writer writer = response.getWriter();
        writer.write(output);
        return null;  
*/


/*
// This mechanism would redirect and change the URL bar
        String page = AntwebProps.getDomainApp() + "/" + name + ".jsp";
        s_log.warn("execute() page:" + page);
//             response.sendRedirect(page);  
//             return null;  
*/

/*
// This mechanism fetches uncompiled jsp code
        String pathInfo = request.getPathInfo();    
        //String query = request.getQueryString();

        String fileName = name + ".jsp";

        String url = AntwebProps.getDomainApp() + "/" + fileName;

        s_log.warn("execute() url:" + url + " pathInfo:" + pathInfo); // + " query:" + query);

        String dir = "/";
//        (new Utility()).createDirectory(dir);
//        String fileName = query;
        String fullPath = AntwebProps.getDocRoot() + dir + fileName;
        String output = null;

        if (AntwebSystem.fileExistsAndCurrent(fullPath)) {
            output = AntwebUtil.readFile(fullPath);
        }
        
        response.setContentType("text/html");
        Writer writer = response.getWriter();
        writer.write(output);
        return null;  
  */

        //String message = "Page not found:" + name;
        //request.setAttribute("message", message);
        //return (mapping.findForward("message"));
    

}
